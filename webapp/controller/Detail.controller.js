jQuery.sap.require("sap.m.MessageToast");
jQuery.sap.require("sap.m.MessageBox");

sap.ui.define([
	"sap/ui/core/mvc/Controller",
	"br/com/salesorderapproval/SalesOrderApproval/util/Formatter"
], function(Controller,Formatter) {
	"use strict";

	return Controller.extend("br.com.salesorderapproval.SalesOrderApproval.controller.Detail", {
		Formatter: Formatter,
		
		onInit:function(){
			var oRouter = sap.ui.core.UIComponent.getRouterFor(this);
			oRouter.getRoute("Detail").attachMatched(this.onRouterMatched,this);
		},
		
		onRouterMatched:function(evt){
			var oArgs;
			var oView;
			
			oArgs = evt.getParameters("arguments");
			oView = this.getView();
			
			oView.bindElement({
				path: "/SalesOrderSet('" + oArgs.arguments.orderID + "')"
			});
		},
		
		onNavBack:function(){
			history.go(-1);
		},
		
		onBeforeRendering:function(){
			this.getView().byId("__form0").bindElement("ToBusinessPartner");
		},
		
		handleApprove:function(){
			
			var bundle = this.getView().getModel("i18n").getResourceBundle();
			
			sap.m.MessageBox.confirm(
				bundle.getText("ApproveDialogMsg"),
				function(oAction){
					if(sap.m.MessageBox.Action.OK === oAction){
						var successMsg = bundle.getText("ApproveDialogSuccessMsg");
						sap.m.MessageToast.show(successMsg);
					}
				},
				bundle.getText("ApproveDialogTitle")
				);
			
			
		},
		
		handleReprove: function() {
			//This code was generated by the layout editor.

			var bundle = this.getView().getModel("i18n").getResourceBundle();

			var cancelButton = new sap.m.Button({
				text: bundle.getText("CancelButtonText"),
				press: function() {
					dialog.close();
				}
			});

			var confirmButton = new sap.m.Button({
				text: bundle.getText("SendButtonText"),
				press: function() {
					dialog.close();
				}
			});

			var noteTextArea = new sap.m.TextArea({
				rows: 6,
				width: "100%",
				placeholder: bundle.getText("ObsButtonText")
			});

			var afterDialogClose = function(evt) {

				var closeButton = evt.getParameter("origin");
				if (closeButton === cancelButton) {
					sap.ui.getCore().getEventBus().publish("nav", "back");
				} else if (closeButton === confirmButton) {

					if (!this.busyDialog) {
						this.busyDialog = new sap.m.BusyDialog({
							showCancelButton: false,
							close: function() {
								var successMsg = bundle.getText("ReproveDialogSuccessMsg");
								sap.m.MessageToast.show(successMsg);
							}
						});
					}
					this.busyDialog.setTitle(bundle.getText("ReproveButtonText"));
					this.busyDialog.open();

					setTimeout(jQuery.proxy(function() {
						this.busyDialog.close();
					}, this), 1000);

				}

			};

			sap.ui.getCore().getEventBus().publish("nav", "virtual");
			var dialog = new sap.m.Dialog({
				title: bundle.getText("ReproveButtonText"),
				content: noteTextArea,
				leftButton: confirmButton,
				rightButton: cancelButton,
				afterClose: afterDialogClose
			});

			dialog.open();

		}
		
		

		
			/**
			 * Called when a controller is instantiated and its View controls (if available) are already created.
			 * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
			 * @memberOf br.com.salesorderapproval.SalesOrderApproval.view.Detail
			 */
			//	onInit: function() {
			//
			//	},

		/**
		 * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered
		 * (NOT before the first rendering! onInit() is used for that one!).
		 * @memberOf br.com.salesorderapproval.SalesOrderApproval.view.Detail
		 */
		//	onBeforeRendering: function() {
		//
		//	},

		/**
		 * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.
		 * This hook is the same one that SAPUI5 controls get after being rendered.
		 * @memberOf br.com.salesorderapproval.SalesOrderApproval.view.Detail
		 */
		//	onAfterRendering: function() {
		//
		//	},

		/**
		 * Called when the Controller is destroyed. Use this one to free resources and finalize activities.
		 * @memberOf br.com.salesorderapproval.SalesOrderApproval.view.Detail
		 */
		//	onExit: function() {
		//
		//	}

	});

});